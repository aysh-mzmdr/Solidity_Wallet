{
  "contractName": "WalletFactory",
  "abi": [
    {
      "inputs": [],
      "name": "createWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"createWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/WalletFactory.sol\":\"WalletFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Wallet.sol\":{\"keccak256\":\"0xd740fdc44c88fb0ce0dcdc6371061bbfebc701cedf6c984882a2648ea43f5fd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f1ca7296bda3399466a14a17f26e472ced8227c4f14962c6d23d33227d24025\",\"dweb:/ipfs/QmV8agucgsXeSymn1W3rPpVHYT2k3k53yRnVM3AtVi36At\"]},\"project:/contracts/WalletFactory.sol\":{\"keccak256\":\"0x60f459ed8c4a6d564092753abe51c0b6f52b9d46a3df2d4a307a50850aad7098\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://416a5fba97bf2224203848eef2b4f3425675a61272621696d2b977deb734ba12\",\"dweb:/ipfs/QmS13Xj78NbefszxFXRPn6ubMdNzL4QJshyXnmKvMeKhZ8\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561000f575f80fd5b506107638061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c806311ebbf241461002d575b5f80fd5b610035610037565b005b5f73ffffffffffffffffffffffffffffffffffffffff165f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146100c9575f80fd5b5f336040516100d79061017a565b6100e191906101c6565b604051809103905ff0801580156100fa573d5f803e3d5ffd5b509050805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61054e806101e083390190565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101b082610187565b9050919050565b6101c0816101a6565b82525050565b5f6020820190506101d95f8301846101b7565b9291505056fe608060405234801561000f575f80fd5b5060405161054e38038061054e833981810160405281019061003191906100d5565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610100565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a48261007b565b9050919050565b6100b48161009a565b81146100be575f80fd5b50565b5f815190506100cf816100ab565b92915050565b5f602082840312156100ea576100e9610077565b5b5f6100f7848285016100c1565b91505092915050565b6104418061010d5f395ff3fe608060405260043610610042575f3560e01c806387cf0a06146100635780638da5cb5b1461008b578063a06d083c146100b5578063b69ef8a8146100bf5761005f565b3661005f57345f80828254610057919061027e565b925050819055005b5f80fd5b34801561006e575f80fd5b5061008960048036038101906100849190610339565b6100e9565b005b348015610096575f80fd5b5061009f6101ad565b6040516100ac9190610397565b60405180910390f35b6100bd6101d2565b005b3480156100ca575f80fd5b506100d3610243565b6040516100e091906103bf565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610141575f80fd5b5f5482111561014e575f80fd5b815f8082825461015e91906103d8565b925050819055508073ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f193505050501580156101a8573d5f803e3d5ffd5b505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461022a575f80fd5b345f8082825461023a919061027e565b92505081905550565b5f5481565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61028882610248565b915061029383610248565b92508282019050808211156102ab576102aa610251565b5b92915050565b5f80fd5b6102be81610248565b81146102c8575f80fd5b50565b5f813590506102d9816102b5565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610308826102df565b9050919050565b610318816102fe565b8114610322575f80fd5b50565b5f813590506103338161030f565b92915050565b5f806040838503121561034f5761034e6102b1565b5b5f61035c858286016102cb565b925050602061036d85828601610325565b9150509250929050565b5f610381826102df565b9050919050565b61039181610377565b82525050565b5f6020820190506103aa5f830184610388565b92915050565b6103b981610248565b82525050565b5f6020820190506103d25f8301846103b0565b92915050565b5f6103e282610248565b91506103ed83610248565b925082820390508181111561040557610404610251565b5b9291505056fea2646970667358221220aa8d62a2e4693ff5f4705cee8ec3aa461b1a31eac75b9a2eb06006aed066e30b64736f6c63430008150033a2646970667358221220df78f45eb5b33571ff3ed0a5fd6c39d3a0298c042204f66d7a1213a6fc7a731664736f6c63430008150033",
  "deployedBytecode": "0x608060405234801561000f575f80fd5b5060043610610029575f3560e01c806311ebbf241461002d575b5f80fd5b610035610037565b005b5f73ffffffffffffffffffffffffffffffffffffffff165f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146100c9575f80fd5b5f336040516100d79061017a565b6100e191906101c6565b604051809103905ff0801580156100fa573d5f803e3d5ffd5b509050805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61054e806101e083390190565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101b082610187565b9050919050565b6101c0816101a6565b82525050565b5f6020820190506101d95f8301846101b7565b9291505056fe608060405234801561000f575f80fd5b5060405161054e38038061054e833981810160405281019061003191906100d5565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610100565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a48261007b565b9050919050565b6100b48161009a565b81146100be575f80fd5b50565b5f815190506100cf816100ab565b92915050565b5f602082840312156100ea576100e9610077565b5b5f6100f7848285016100c1565b91505092915050565b6104418061010d5f395ff3fe608060405260043610610042575f3560e01c806387cf0a06146100635780638da5cb5b1461008b578063a06d083c146100b5578063b69ef8a8146100bf5761005f565b3661005f57345f80828254610057919061027e565b925050819055005b5f80fd5b34801561006e575f80fd5b5061008960048036038101906100849190610339565b6100e9565b005b348015610096575f80fd5b5061009f6101ad565b6040516100ac9190610397565b60405180910390f35b6100bd6101d2565b005b3480156100ca575f80fd5b506100d3610243565b6040516100e091906103bf565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610141575f80fd5b5f5482111561014e575f80fd5b815f8082825461015e91906103d8565b925050819055508073ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f193505050501580156101a8573d5f803e3d5ffd5b505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461022a575f80fd5b345f8082825461023a919061027e565b92505081905550565b5f5481565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61028882610248565b915061029383610248565b92508282019050808211156102ab576102aa610251565b5b92915050565b5f80fd5b6102be81610248565b81146102c8575f80fd5b50565b5f813590506102d9816102b5565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610308826102df565b9050919050565b610318816102fe565b8114610322575f80fd5b50565b5f813590506103338161030f565b92915050565b5f806040838503121561034f5761034e6102b1565b5b5f61035c858286016102cb565b925050602061036d85828601610325565b9150509250929050565b5f610381826102df565b9050919050565b61039181610377565b82525050565b5f6020820190506103aa5f830184610388565b92915050565b6103b981610248565b82525050565b5f6020820190506103d25f8301846103b0565b92915050565b5f6103e282610248565b91506103ed83610248565b925082820390508181111561040557610404610251565b5b9291505056fea2646970667358221220aa8d62a2e4693ff5f4705cee8ec3aa461b1a31eac75b9a2eb06006aed066e30b64736f6c63430008150033a2646970667358221220df78f45eb5b33571ff3ed0a5fd6c39d3a0298c042204f66d7a1213a6fc7a731664736f6c63430008150033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nativeSrc": "0:590:2",
        "nodeType": "YulBlock",
        "src": "0:590:2",
        "statements": [
          {
            "body": {
              "nativeSrc": "52:81:2",
              "nodeType": "YulBlock",
              "src": "52:81:2",
              "statements": [
                {
                  "nativeSrc": "62:65:2",
                  "nodeType": "YulAssignment",
                  "src": "62:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nativeSrc": "77:5:2",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:2"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "84:42:2",
                        "nodeType": "YulLiteral",
                        "src": "84:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nativeSrc": "73:3:2",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:2"
                    },
                    "nativeSrc": "73:54:2",
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nativeSrc": "62:7:2",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nativeSrc": "7:126:2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nativeSrc": "34:5:2",
                "nodeType": "YulTypedName",
                "src": "34:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nativeSrc": "44:7:2",
                "nodeType": "YulTypedName",
                "src": "44:7:2",
                "type": ""
              }
            ],
            "src": "7:126:2"
          },
          {
            "body": {
              "nativeSrc": "184:51:2",
              "nodeType": "YulBlock",
              "src": "184:51:2",
              "statements": [
                {
                  "nativeSrc": "194:35:2",
                  "nodeType": "YulAssignment",
                  "src": "194:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nativeSrc": "223:5:2",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nativeSrc": "205:17:2",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:2"
                    },
                    "nativeSrc": "205:24:2",
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nativeSrc": "194:7:2",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nativeSrc": "139:96:2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nativeSrc": "166:5:2",
                "nodeType": "YulTypedName",
                "src": "166:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nativeSrc": "176:7:2",
                "nodeType": "YulTypedName",
                "src": "176:7:2",
                "type": ""
              }
            ],
            "src": "139:96:2"
          },
          {
            "body": {
              "nativeSrc": "306:53:2",
              "nodeType": "YulBlock",
              "src": "306:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nativeSrc": "323:3:2",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nativeSrc": "346:5:2",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nativeSrc": "328:17:2",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:2"
                        },
                        "nativeSrc": "328:24:2",
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "316:6:2",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:2"
                    },
                    "nativeSrc": "316:37:2",
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:2"
                  },
                  "nativeSrc": "316:37:2",
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:2"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nativeSrc": "241:118:2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nativeSrc": "294:5:2",
                "nodeType": "YulTypedName",
                "src": "294:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nativeSrc": "301:3:2",
                "nodeType": "YulTypedName",
                "src": "301:3:2",
                "type": ""
              }
            ],
            "src": "241:118:2"
          },
          {
            "body": {
              "nativeSrc": "463:124:2",
              "nodeType": "YulBlock",
              "src": "463:124:2",
              "statements": [
                {
                  "nativeSrc": "473:26:2",
                  "nodeType": "YulAssignment",
                  "src": "473:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "485:9:2",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:2"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "496:2:2",
                        "nodeType": "YulLiteral",
                        "src": "496:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "481:3:2",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:2"
                    },
                    "nativeSrc": "481:18:2",
                    "nodeType": "YulFunctionCall",
                    "src": "481:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "473:4:2",
                      "nodeType": "YulIdentifier",
                      "src": "473:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nativeSrc": "553:6:2",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "566:9:2",
                            "nodeType": "YulIdentifier",
                            "src": "566:9:2"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "577:1:2",
                            "nodeType": "YulLiteral",
                            "src": "577:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "562:3:2",
                          "nodeType": "YulIdentifier",
                          "src": "562:3:2"
                        },
                        "nativeSrc": "562:17:2",
                        "nodeType": "YulFunctionCall",
                        "src": "562:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nativeSrc": "509:43:2",
                      "nodeType": "YulIdentifier",
                      "src": "509:43:2"
                    },
                    "nativeSrc": "509:71:2",
                    "nodeType": "YulFunctionCall",
                    "src": "509:71:2"
                  },
                  "nativeSrc": "509:71:2",
                  "nodeType": "YulExpressionStatement",
                  "src": "509:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nativeSrc": "365:222:2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "435:9:2",
                "nodeType": "YulTypedName",
                "src": "435:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nativeSrc": "447:6:2",
                "nodeType": "YulTypedName",
                "src": "447:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "458:4:2",
                "nodeType": "YulTypedName",
                "src": "458:4:2",
                "type": ""
              }
            ],
            "src": "365:222:2"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "88:296:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "88:296:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;176:205;;;:::i;:::-;;;267:1;228:41;;:15;:27;244:10;228:27;;;;;;;;;;;;;;;;;;;;;;;;;:41;;;220:50;;;;;;281:13;308:10;297:22;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;281:38;;366:6;330:15;:27;346:10;330:27;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;209:172;176:205::o;-1:-1:-1:-;;;;;;;;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\nimport \"./Wallet.sol\";\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract WalletFactory {\r\n    \r\n    mapping(address => address) walletOwnership;\r\n\r\n    function createWallet() external {\r\n        require(walletOwnership[msg.sender] == address(0));\r\n        Wallet wallet = new Wallet(msg.sender);\r\n        walletOwnership[msg.sender]=address(wallet);\r\n    }\r\n}",
  "sourcePath": "D:\\Programming\\GitHub\\Solidity_Wallet\\contracts\\WalletFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/WalletFactory.sol",
    "exportedSymbols": {
      "Wallet": [
        73
      ],
      "WalletFactory": [
        117
      ]
    },
    "id": 118,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "project:/contracts/Wallet.sol",
        "file": "./Wallet.sol",
        "id": 75,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 118,
        "sourceUnit": 74,
        "src": "35:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "61:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "WalletFactory",
        "contractDependencies": [
          73
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 117,
        "linearizedBaseContracts": [
          117
        ],
        "name": "WalletFactory",
        "nameLocation": "97:13:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 80,
            "mutability": "mutable",
            "name": "walletOwnership",
            "nameLocation": "152:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 117,
            "src": "124:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 79,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 77,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "132:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "124:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 78,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "143:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "209:172:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 84,
                            "name": "walletOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "228:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 87,
                          "indexExpression": {
                            "expression": {
                              "id": 85,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "244:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 86,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "248:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "244:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "228:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 90,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "267:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "259:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 88,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "259:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "259:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "228:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "220:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "220:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "220:50:1"
                },
                {
                  "assignments": [
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97,
                      "mutability": "mutable",
                      "name": "wallet",
                      "nameLocation": "288:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 115,
                      "src": "281:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wallet_$73",
                        "typeString": "contract Wallet"
                      },
                      "typeName": {
                        "id": 96,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 95,
                          "name": "Wallet",
                          "nameLocations": [
                            "281:6:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 73,
                          "src": "281:6:1"
                        },
                        "referencedDeclaration": 73,
                        "src": "281:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Wallet_$73",
                          "typeString": "contract Wallet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 104,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 101,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "308:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "312:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "308:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "297:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Wallet_$73_$",
                        "typeString": "function (address) returns (contract Wallet)"
                      },
                      "typeName": {
                        "id": 99,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98,
                          "name": "Wallet",
                          "nameLocations": [
                            "301:6:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 73,
                          "src": "301:6:1"
                        },
                        "referencedDeclaration": 73,
                        "src": "301:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Wallet_$73",
                          "typeString": "contract Wallet"
                        }
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "297:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wallet_$73",
                      "typeString": "contract Wallet"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "281:38:1"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 105,
                        "name": "walletOwnership",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "330:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 108,
                      "indexExpression": {
                        "expression": {
                          "id": 106,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "346:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "350:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "346:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "330:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 111,
                          "name": "wallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "366:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Wallet_$73",
                            "typeString": "contract Wallet"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Wallet_$73",
                            "typeString": "contract Wallet"
                          }
                        ],
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "358:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "358:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "358:15:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "330:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "330:43:1"
                }
              ]
            },
            "functionSelector": "11ebbf24",
            "id": 116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createWallet",
            "nameLocation": "185:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "197:2:1"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "209:0:1"
            },
            "scope": 117,
            "src": "176:205:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 118,
        "src": "88:296:1",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "35:349:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {
    "1753609734168": {
      "events": {},
      "links": {},
      "address": "0xC8F5b1eaC3521762CE0d61Da6154e0B097bc9E22",
      "transactionHash": "0xcc1106dce52c72edea34b603403fd7d043683dc54b7177821b606fdff9cc3020"
    },
    "1753612010919": {
      "events": {},
      "links": {},
      "address": "0xe251C6f1D7041664d9b3A1b94b9D3a78C5d84572",
      "transactionHash": "0x55378fc2df4c7f0a18fa2d05495a8c93191b0e175565f40d3b502af194bb8396"
    },
    "1753620510405": {
      "events": {},
      "links": {},
      "address": "0x24135c99777Ac8c276bE09B3709afB0712c424ee",
      "transactionHash": "0xbcb5b0129f9d91161f40596148b60e82d4fd84f9085df149451fe406fb62b1d2"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-07-27T12:48:41.166Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}